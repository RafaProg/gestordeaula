Autor do trabalho: Rafael Fernandes Vieira

Trabalho para obtenção de nota da disciplina de Desenvolvimento Web III
que foi ministrada pelo professor e análista de sistemas Marcos Eduardo.

O documento README divide seus assuntos por bloco sendo que:
Inicio do bloco = {# ASSUNTO TRATADO
Fechamento do bloco = /} FIM DO ASSUNTO

{# NESTE BLOCO ESTA TODAS AS LINHAS DE CODIGO SQL USADO NA APLICAÇÃO

-- MySQL Script generated by MySQL Workbench
-- 04/03/18 20:47:58
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema gestordeaula
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema gestordeaula
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `gestordeaula` DEFAULT CHARACTER SET utf8 ;
USE `gestordeaula` ;

-- -----------------------------------------------------
-- Table `gestordeaula`.`tb_usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gestordeaula`.`tb_usuario` (
  `idusuario` INT NOT NULL AUTO_INCREMENT,
  `usuario` VARCHAR(50) NOT NULL,
  `senhausuario` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`idusuario`),
  UNIQUE INDEX `usuario_UNIQUE` (`usuario` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gestordeaula`.`tb_professor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gestordeaula`.`tb_professor` (
  `idprofessor` INT NOT NULL AUTO_INCREMENT,
  `nomeprofessor` VARCHAR(100) NOT NULL,
  `emailprofessor` VARCHAR(50) NOT NULL,
  `titulacaoprofessor` VARCHAR(45) NOT NULL,
  `usuario_idusuario` INT NOT NULL,
  PRIMARY KEY (`idprofessor`),
  INDEX `fk_professor_usuario_idx` (`usuario_idusuario` ASC),
  CONSTRAINT `fk_professor_usuario`
    FOREIGN KEY (`usuario_idusuario`)
    REFERENCES `gestordeaula`.`tb_usuario` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

############## PROCEDURE QUE FAZ O CADASTRO DO USUARIO E DO PROFESSOR #############

CREATE DEFINER=`root`@`localhost` PROCEDURE `cadastrar_usuario_professor`(
pusuario VARCHAR(50),
psenhausuario VARCHAR(255),
pnomecompleto VARCHAR(100),
pemail VARCHAR(50),
ptitulacao VARCHAR(45)
)
BEGIN

	DECLARE vidusuario INT;
    
    INSERT INTO tb_usuario(usuario, senhausuario) VALUES(pusuario, psenhausuario);
    
    SET vidusuario = LAST_INSERT_ID();
    
    INSERT INTO tb_professor(nomeprofessor, emailprofessor, titulacaoprofessor, usuario_idusuario)
    VALUES(pnomecompleto, pemail, ptitulacao, vidusuario);
    
    SELECT * FROM tb_usuario a INNER JOIN tb_professor b ON a.idusuario = b.usuario_idusuario WHERE a.idusuario = vidusuario;

END

/} FIM DO SQL